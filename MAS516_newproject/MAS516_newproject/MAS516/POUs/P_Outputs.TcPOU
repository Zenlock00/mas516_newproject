<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="P_Outputs" Id="{05725e2c-789e-4faf-9ddc-3f7ec72a2093}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Outputs
VAR
	fbWinchValveOutput 		: FB_ValveOutput;
	fbCylValveOutput 		: FB_ValveOutput;
	eStatus 				: E_Status; 
	bEnableWinch 			: BOOL;
	bEnableCylinder			: BOOL;
	bTest1 : BOOL;
	bTest2 : BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF MAIN.eStatus = E_Status.Running THEN
	G_IO.bEnablePCDV := TRUE;
	G_IO.bWinchValveEnable := TRUE;
	G_IO.bCylinderValveEnable := TRUE;
ELSE
	G_IO.bEnablePCDV := FALSE;	
	G_IO.bWinchValveEnable := FALSE;
	G_IO.bCylinderValveEnable := FALSE;
END_IF

///////////////////// Winch //////////////////////////////
IF (MAIN.eStatus = E_Status.Running) AND G_IO.bWinchEnable THEN 
	G_IO.bOpenBrakes := TRUE;
	bEnableWinch := TRUE;
ELSE
	G_IO.bOpenBrakes := FALSE;
	bEnableWinch := FALSE;
END_IF

fbWinchValveOutput(
	bEnable := bEnableWinch,
	bDeadBandCompOn := G_Parameters.stParam.bWinchDeadBandCompOn,
	stValveDeadBand := G_Parameters.stParam.stWinchValveDeadBand,
	fNormalizedInput := G_Sensors.fJoystickNormalizedY,
	nOutput => G_IO.fWinchValveOut
);

///////////////////// Cylinder //////////////////////////////

IF (MAIN.eStatus = E_Status.Running) AND G_IO.bCylinderEnable THEN 
	bEnableCylinder := TRUE;
ELSE
	bEnableCylinder := FALSE;
END_IF

fbCylValveOutput(
	bEnable := bEnableCylinder,
	bDeadBandCompOn := G_Parameters.stParam.bCylinderDeadBandCompOn,
	stValveDeadBand := G_Parameters.stParam.stCylValveDeadBand,
	fNormalizedInput := G_Sensors.fJoystickNormalizedX,
	nOutput => G_IO.fCylValveOut
);

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>